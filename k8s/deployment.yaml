apiVersion: apps/v1
kind: Deployment
metadata:
  name: eliteshop-deployment
  namespace: eliteshop
  labels:
    app: eliteshop
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: eliteshop
  template:
    metadata:
      labels:
        app: eliteshop
        version: v1
    spec:
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: fix-permissions
          image: eliteshop.azurecr.io/elite-shop:4
          command: ["sh", "-c", "chown -R 1001:1001 /tmp /var/cache/nginx /var/log/nginx"]
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: cache-volume
              mountPath: /var/cache/nginx
            - name: log-volume
              mountPath: /var/log/nginx
      containers:
        - name: eliteshop
          image: eliteshop.azurecr.io/elite-shop:4
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: eliteshop-config
                  key: NODE_ENV
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: eliteshop-config
                  key: PORT
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: cache-volume
              mountPath: /var/cache/nginx
            - name: log-volume
              mountPath: /var/log/nginx
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: cache-volume
          emptyDir: {}
        - name: log-volume
          emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30